plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

allprojects {
    group = 'io.emeraldpay.pjc'
    version = "0.1.0-SNAPSHOT"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://oss.jfrog.org/artifactory/repo' }
        //for java-multibase
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'

    targetCompatibility = '11'
    sourceCompatibility = '11'

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    compileJava.options.compilerArgs \
        << '-Xlint:unchecked' << '-Xlint:deprecation'

    dependencies {
        testImplementation 'org.objenesis:objenesis:3.1'
        testImplementation ('org.spockframework:spock-core:2.0-M2-groovy-3.0') {
            exclude group: 'org.codehaus.groovy'
        }
        testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.13'
        testImplementation 'org.codehaus.groovy:groovy-all:3.0.3'
        testImplementation 'commons-codec:commons-codec:1.14'
        testImplementation 'cglib:cglib-nodep:3.3.0'
    }

    test {
        jvmArgs '-ea'
        useJUnitPlatform()
        testLogging.showStandardStreams = true
        testLogging.exceptionFormat = 'full'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    test.finalizedBy jacocoTestReport

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    jacoco {
        toolVersion = "0.8.4"
    }

}

